%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: xfig_to_eps.dvi
%%BoundingBox: 88 182 988 604
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E -o massHierarchy.eps xfig_to_eps.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2008.02.23:0949
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 600 600 (xfig_to_eps.dvi)
@start
%DVIPSBitmapFont: Fa cmsy10 24.88 1
/Fa 1 1 df<003FC112F04820F8C212FCA56C20F86C20F07E096FB7A1>0
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr17 24.88 14
/Fb 14 119 df[<F207C0507EA2507EA2507EA2507EA2507EA24F7FA24F80A24F801ADF
070F801A8F071F801A07073F80A2F13E03077E80F17C0107FC804F7E0601814F7F060382
4F7F0607824F7F060F824F7F061F8296C77E4E82063E80067E82067C8006FC82874D4882
A24E810503844E810507844E81050F844E81051F8495C97E4D84053E82057E84057C8205
FC844D820401854D830403864D83040786A24D83040F864D83041F8694CB7E4C86043E84
047E86047C8404FC864C840301874C850303884C850307884C85030F884C85031F888A4B
CD80A2033E86037E88037C8603FC884B860201894B8702038A4B8702078A4B87020F8A4B
87021F8A92CF7E4A8A023E88027E8A027C8802FC8AA24A8801018B4A8901038C4A890107
8C4A89010F8C4A89011F8C91D17E498C013E8A017E8C017C8A01FC8C498A00018D498B00
0322808D484821C0A290C3FC4822E0A24822F0A24822F8A24822FCA2C412FEA3>143
146 120 273 160 1 D[<EE3FFC0303B512C0031F14F8037F14FE913B01FFF00FFF804A
90C77FDA0FFCEC3FF04A486E7EDA3FE0EC07FCDAFFC06EB4FC49496E7F92C9FC4948707E
4948707E4948707E011F844A160F013F844A1607017F844A160301FF84A24849701380A2
481AC0A291CBFC481AE0A3481AF0A249187F001F1AF8A4003F1AFCA549183F007F1AFEA9
00FF1AFFB3AF007F1AFEA76D187FA2003F1AFCA6001F1AF8A36D18FF6C1AF0A46C1AE06E
5EA26C1AC0A26C6D4C1380A36C1A006E5E017F606E160F013F606D6C4C5AA26D6C4C5A6D
6C4C5A0103606E16FF6D6D4A5B6D6D4A90C7FC6E6C4A5ADA1FF8EC1FF86E6C4A5A6EB46C
48B45A0201D9F00F13806E6CB548C8FC031F14F8030314C09226003FFCC9FC>80
139 121 263 95 48 D[<ED3FFF0203B512F8021FECFF80027F15E0902701FFC00313F8
D907FCC7EA3FFED91FE0913807FF80D93F806E7F49C913F001FC707E4848707E4848161F
48488349707E4848188048CA7E1AC0123EA24819E084EA7FC013F0486C18F07F7FA76C5A
6C5A6C5AD807C04C13E0CBFCA21AC060A24E1380A24E130061187F4E5A4D5B4D5B614D13
804D90C7FC4D5A604D5A4D5A604D5A4C5B95C8FC4C5AA24C5A5F4C5AA24C5A5FA24C5AA2
94C9FC5E167EA25EA25EA215015EA35E1503A45EB3A392CBFCB3ED0FE04B7E4B7E4B7E4B
7E4A7FA76E5B6F5A6F5A6F5A6F5A>68 145 118 272 89 63 D<ED0FFF92B512F0020314
FE020F6E7E91263FF00313E0913AFF80007FF8D901FCC7EA1FFCD903F0EC07FE49486E6C
7E49486E7F49C97F013E707E017E163F017C8349707EA24848707E13FF02C06F7E80486D
6F7F80A3727FA46C5BA238007FC06D5A90CAFCA8053FB5FC040FB6FC4BB7FC031F140103
7F1380913903FFF800020F13C0DA3FFEC7FCECFFF8010313E0495B011F90C8FC495A495A
495A485B485B485BA2485B4890C9FCA248481A3CA2127F5BA3485A60A460A3606D160E00
7F171E606D716C1378003F17786C6C16F06E4A486C6C13F06C6DEC03C06C6D020790391F
F801E06C6DDA1F00EBFC036C6D023E90390FFF9FC026007FFED901FC6DEBFF8090281FFF
E00FF06D1400010790B5486D5B010103806D13F8D9003F01FCC8EA1FC0020101C092C8FC
565E78DB5F>97 D[<1B7E96380FFFFE0603B5FCA6F00003F1007F1A3F1A1FA21A0FB3B3
A3EE0FFE4BB512E0030F14FC033F14FF9226FFFC0013C0020301E0EB0FE0020F90C7EA03
F8DA1FFCEC00FC4A48153EDAFFE0151F4949ED0F8F4949ED07CF4990C9EA03EF4948EE01
FF494882133F4A177F4948173F13FF4A171F5A4849170FA2485BA25A91CBFC5AA3485AA4
127FA25BA312FFAF127FA37FA3123FA3121F7FA27EA26C7FA21A1F6C7F6C193F806C197F
80017F18FF6D6C5E6D6C17EF6D6C1603963807CFFF6D6CEE0F8F6D6DDB1F0F7F6D6D037E
809026007FF003FC14F86E6CDA01F8ECFFF8DA1FFEEC07E0912607FF80EB3FC002019039
F003FF006E6CB512FC031F14F003030280EDFE009226003FF8C701C0C7FC>93
145 122 270 106 100 D<EE7FFC0307B512C0033F14F892B612FE02039039E01FFF804A
D9000313E0DA1FFC01007FDA3FF0EC3FF84A486E7E4A48EC07FE4949814990C86C7F4948
6F7F49486F7F495A013F717E495A737E49488348181F5C48854A160F5A864890CAFC8548
1A80A25B123FA37313C0127FA25BA312FF90BBFCA401FCCDFCAB127FA27FA3123FA36C7E
A36CF103C0807E1A076C6D1880A26C190F6E18006C616D6C171E6E173E013F606D6C1778
6D6C17F801074D5A6D6C4C5A6D6D4B5A6D6D4B5ADA7FF04BC7FC6E6C157EDA1FFE5D9126
07FF80EB03F86E01E0EB1FF0020001FEEBFFC0033FB6C8FC030F14FC030114F0DB001F90
C9FC4A5E7BDB54>I[<EB07F0497E497E497E497E90B57EA76D90C7FC6D5A6D5A6D5A6D5A
90C9FCB3ABEC1F8048B5FC127FA6C67E131F7F7FA27FB3B3B3AF497F497F013F13F8B712
F8A6>37 137 121 264 52 105 D[<EC1F800003B5FCB6FCA6C6FC131F7F7FA27FB3B3B3
B3B3B3AD497F497F013F13F8B712FEA6>39 143 121 270 52 108
D<023F912601FFE0933807FF800003B5021F01FE047F13F8B6027FD9FFC04AB6FC4CB600
F0020715C0932607FC0101FC91261FF00713F093280FC0003FFE4AC77F4CC7D80FFF027C
EC3FFC047E02036D4848EC0FFEC603F86E9026C003E06E7E011F4948704848826D4A6E4B
806D49486F6C48C86C7F4B48171E6D49C96C6C486F7FA2031E60031C93261FFC70707E03
3C18F0033860037817FD037070B448707E15F04B60A44B95CAFCA44B5FB3B3B0496D4C6C
4D7E496D4C6D4C7E013F01F893B500E003036D7EB700FE0103B700F8010FB712E0A6935B
79DAA0>I<023F913801FFE00003B5021F13FEB6027FEBFFC04CB612F0932607FC0113FC
933A0FC0003FFE4CC7EA0FFF047E02037FC603F86E7F011F4948826D4A806D49486F7E4B
5A6D49C96C7EA2151E031C707E153C153815780370707E15F05DA45DA45DB3B3B0496D4C
7E496D4C7F013F01F893B512E0B700FE0103B712F8A65D5B79DA6A>I<EE0FFF93B512F0
030714FE033FECFFC09226FFF80113F002039039C0003FFC4A48C7EA07FEDA1FF8913801
FF804A486E7FDA7FC0ED3FE04A486F7E4990C96C7E4948707E4948707E010F844948707F
4948707FA24948717E4948717EA248864849717EA24890CB6C7EA24886A24984001F1B80
A2003F1BC0A34984007F1BE0A500FF1BF0AF007F1BE0A36D60A2003F1BC0A4001F1B806D
606C1B00A36C6D4D5AA26C626E173F6C626C6D4D5AA26D6C4D5A013F616D6C4C5B6E5E6D
6C4C90C7FC6D6C4C5A6D606D01C0ED3FF86D6D4B5ADA3FF0EDFFC0DA1FFC02035BDA07FE
4A48C8FC912603FFC0EB3FFC02009039F801FFF0033FB612C0030F92C9FC030114F8DB00
0F90CAFC545E7BDB5F>I<023FEC0FF00003B5EC7FFEB649B51280040714E093391FF00F
F093383F803F93397E007FF85EC6DA01F0EBFFFC011F5C6D13036D495A5E6D49C7FCF07F
F8151EF01FE04BEC078095C7FC5DA2157015F0A25DA45DA65DB3B3AB815B497F013F13FC
B812C0A63E5B7ADA49>114 D<15F0A91401A61403A41407A4140FA2141FA2143FA2147F
A214FF5B5B5B5B5B137F90B9FC120FBAFCA4C7D87FF0C9FCB3B3AAF001E0B218036E6C15
C0A418076E6C1580A2020FED0F008102075D6F141E6E6D5B6E6D137C6E6D5B6F6C485A92
393FFC07E06FB55A03075C030049C7FCEE1FF03B817DFE49>116
D<B700F0031FB512FEA6C66C01FCC9000714C0011F01F00401EBFE006D497013F86D4971
5A6D735A646D626F95C7FC7F1B3E81027F183C81023F60A26F17F8021F60811A01020F60
6F16036E60A27015076E6070150F6E95C8FCA2705D6E171E82037F5EA270157C033F1678
821AF8031F5E701401030F5EA27014036F5E7113076F5EA271130F6F93C9FC836F151EA2
71133E047F143C83197C043F14787113F8041F5CA2EFFE01040F5CEFFF03705CA2188770
5C18C77001CFCAFCA218FF705BA3715AA2715AA3715AA2715AA3715A715A5F5B7ED864>
118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr17 17.28 3
/Fc 3 52 df<EC01C014031407140F143F147FEB03FF130F90B5FCB6FCEBFC7F13F01300
C7FCB3B3B3B3A24A7EA2010713FCB812E0A42B5E74DD42>49 D<EC0FFE91387FFFE00103
B512F8010F14FE903A1FE00FFF8090263E000113E001FC6D6C7ED801F06E7E4848EC0FFC
496E7E48486E7E48C81480000E81001E6F13C0121C003CEE7FE012380078EE3FF01270A3
B46CED1FF813E0A27FA66C5A6C5A0006C913F0CA123FA318E0177FA2EFFFC0A218805E18
004C5A16075F4C5A5F161F4C5A4C5A5F4CC7FC4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8FC15
7E5D4A5A4A5A4A5A4A5A4A5A4AC9FC143E4A15385C495A495A49481570495A49C9FC131E
5B4916F05B484816E0484815014848150348B8FCA25A5A5AB912C0A4355E7ADD42>I<91
3803FF80023F13F849B512FE01076E7E90261FFC0013E0D93FC0EB3FF8017EC7EA0FFC01
F86E7E48486E7E48486E13804848804916C048C9EA7FE013E013F8486CED3FF07FA66C5A
6C5AEA01E0CAEA7FE0A318C017FF18805E18005E5F4C5A4C5A4C5A4C5AEE7F804CC7FCED
03FC913801FFF091B512C05E16F891380001FE9238003F80EE1FE0EE07F8707E707E8370
1380EF7FC018E0173F18F018F8171FA218FCA2170F18FEA21207EA1FC0EA7FF0A2487EA5
EF1FFC5B5B6C4816F80078C9123F18F07EEF7FE07E001FEEFFC06C6C4A13806C7E6C6C4A
1300D801F84A5AD800FEEC1FF8D93FC0495A903A1FFC01FFE00107B6128001014AC7FCD9
003F13F00203138037607BDD42>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi12 24.88 2
/Fd 2 110 df<DB3FE018FC0107B5F003FE0003B6F007FF4863A2645EA2C762021F1AFE
5EA21C7F1DFC93CBFC1CFF4A1AF8A24B4D13F0A2027F601DE05D5113C014FF5113805D51
13005B644B173F6449197F515A5D505B4962624B6062494E5B99C7FC4B4C5AA2494E5A50
5A92CA485AA2494D5B4F5B4A604F90C8FC017F4D5A191F4A4C5A6201FF4D5A4F5A4A4B5B
4E5B484D90C9FC4E5A4A4B5AF03FF0484D5A4E5A4A4A5B050790CAFC484C5AEF1FF84A4A
5AEFFFE0484B13804C90CBFC4AEB0FFC4C5A48ED7FE0923801FF80DA000790CCFCED0FFC
48EC3FF0913801FFC0D9FE0790CDFCEC1FFC007FEBFFF090B512804ACEFC14F0B5128001
FCCFFCEA7FC0605B76DA64>23 D<DA7FC0DC7FFCEFFFF8902601FFF80307B56C030FEBFF
80010701FE033F02F0037F14E0496D92B66C4AB612F8D91FC16D01039026C03FFE020790
38803FFC49C66C6C90280FFC000FFF913A0FFC000FFE017E6D6CD91FE001036DD93FE06D
7E496ED97F806D6DD97F806D7F496D6C01FEC76E01FEC76C7F00014C486E4A5A499126FC
03F09326F003F08200034C48037F494880496E48487048488200074C484D5A494BC94AC9
FC000F047EDDFC7E707E49037C043F5B4D60001F03FFF0FDF090C74A17FF4B4960484C60
003E5118FF4D604B97CAFC007E93CAFC007C4B60A24B484D485E00FC6B484B60A24A4E60
C7FC4C4E60A24A4E60A15A4C60A24A4E60A15A4C606A4A4E97C8FCA24C4E5E6B4A60227F
93CA91CA5BA24A4E18FF6B4B6069027F067F61A24B4E5E6B02FF06FF1CF05715014B4E60
A2494E4E15035914E04B4E5EA0C71207494E1DC0694B4E4D140FA1148049605748EC1F00
4B60A1133E4960585C4B60A15B494E063F1401A15B92CA91CA4B5A0F1F4A5A494E1B0F0F
0F4A5A4A4E72017FC7FC0F0714FE9E3903FF07FC4A4E71EBFFF06D487148715C4A4E063F
1380D907C0DD07C0DE07FCC8FCA45D7ADAB1>109 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
1 0 bop Black Black Black 141 4472 a @beginspecial 0
@llx 0 @lly 883 @urx 420 @ury 8830 @rwi @setspecial
%%BeginDocument: massHierarchy.pstex
%!PS-Adobe-2.0 EPSF-2.0
%%Title: massHierarchy.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Sat Feb 23 10:47:45 2008
%%For: jingliu@pclg-13 (Jing Liu)
%%BoundingBox: 0 0 883 420
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.793 0.039 0.656 srgb} bind def

end
save
newpath 0 420 moveto 0 0 lineto 883 0 lineto 883 420 lineto closepath clip newpath
-36.7 634.5 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% left45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004010002008001004000802000401000200
	8001004000802000401080200040100020080010
	0400080200040100020080010040008020004010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P4 exch def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

% crosshatch45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<8020004050102088201104400a02800401000a02
	8011044020882040501080200040501020882011
	04400a02800401000a0280110440208820405010>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P6 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#055 /minus 8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /hyphen 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 4650 4800 m 7200 4800 l 7200 5012 l 4650 5012 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 310.00 320.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 4800 m 4650 4800 l 4650 5012 l 2100 5012 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 140.00 320.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 3800 8400 m 5500 8400 l 5500 8612 l 3800 8612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 253.33 560.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 8400 m 3800 8400 l 3800 8612 l 2100 8612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 140.00 560.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5500 8400 m 7200 8400 l 7200 8612 l 5500 8612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 366.67 560.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6456 9000 m 7200 9000 l 7200 9212 l 6456 9212 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 430.40 600.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 5712 9000 m 6456 9000 l 6456 9212 l 5712 9212 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 380.80 600.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 2100 9000 m 5712 9000 l 5712 9212 l 2100 9212 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 140.00 600.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 10700 4813 m 12400 4813 l 12400 5025 l 10700 5025 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 713.33 320.87] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9000 4813 m 10700 4813 l 10700 5025 l 9000 5025 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 600.00 320.87] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 12400 4813 m 14100 4813 l 14100 5025 l 12400 5025 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 826.67 320.87] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 13356 5400 m 14100 5400 l 14100 5612 l 13356 5612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 890.40 360.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 12612 5400 m 13356 5400 l 13356 5612 l 12612 5612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 840.80 360.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9000 5400 m 12612 5400 l 12612 5612 l 9000 5612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 600.00 360.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 11550 8400 m 14100 8400 l 14100 8612 l 11550 8612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 770.00 560.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 9000 8400 m 11550 8400 l 11550 8612 l 9000 8612 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P4 [16 0 0 -16 600.00 560.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
1245 3585 m 1155 3585 l 1155 3845 l 1200 3620 l 1245 3845 l cp
eoclip
n 1200 10500 m
 1200 3600 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 80.00 240.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 1245 3845 m 1200 3620 l 1155 3845 l 1200 3800 l 1245 3845 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
14205 5490 m 14295 5490 l 14295 5279 l 14250 5459 l 14205 5279 l cp
14295 4860 m 14205 4860 l 14205 5071 l 14250 4891 l 14295 5071 l cp
eoclip
n 14250 4875 m
 14250 5475 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 950.00 325.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 14295 5071 m 14250 4891 l 14205 5071 l 14295 5071 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 14205 5279 m 14250 5459 l 14295 5279 l 14205 5279 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 900 10200 m
 15300 10200 l gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P6 [16 0 0 -16 60.00 680.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
gs  clippath
7305 10215 m 7395 10215 l 7395 10004 l 7350 10184 l 7305 10004 l cp
7395 9060 m 7305 9060 l 7305 9271 l 7350 9091 l 7395 9271 l cp
eoclip
n 7350 9075 m
 7350 10200 l gs col0 s gr gr

% arrowhead
n 7395 9271 m 7350 9091 l 7305 9271 l 7395 9271 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 7305 10004 m 7350 10184 l 7395 10004 l 7305 10004 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
14205 10215 m 14295 10215 l 14295 10004 l 14250 10184 l 14205 10004 l cp
14295 8460 m 14205 8460 l 14205 8671 l 14250 8491 l 14295 8671 l cp
eoclip
n 14250 8475 m
 14250 10200 l gs col0 s gr gr

% arrowhead
n 14295 8671 m 14250 8491 l 14205 8671 l 14295 8671 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 14205 10004 m 14250 10184 l 14295 10004 l 14205 10004 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
14205 8490 m 14295 8490 l 14295 8279 l 14250 8459 l 14205 8279 l cp
14295 4860 m 14205 4860 l 14205 5071 l 14250 4891 l 14295 5071 l cp
eoclip
n 14250 4875 m
 14250 8475 l gs col0 s gr gr

% arrowhead
n 14295 5071 m 14250 4891 l 14205 5071 l 14295 5071 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 14205 8279 m 14250 8459 l 14295 8279 l 14205 8279 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7305 8490 m 7395 8490 l 7395 8279 l 7350 8459 l 7305 8279 l cp
7395 4860 m 7305 4860 l 7305 5071 l 7350 4891 l 7395 5071 l cp
eoclip
n 7350 4875 m
 7350 8475 l gs col0 s gr gr

% arrowhead
n 7395 5071 m 7350 4891 l 7305 5071 l 7395 5071 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 7305 8279 m 7350 8459 l 7395 8279 l 7305 8279 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7305 9090 m 7395 9090 l 7395 8879 l 7350 9059 l 7305 8879 l cp
7395 8460 m 7305 8460 l 7305 8671 l 7350 8491 l 7395 8671 l cp
eoclip
n 7350 8475 m
 7350 9075 l gs col0 s gr gr

% arrowhead
n 7395 8671 m 7350 8491 l 7305 8671 l 7395 8671 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 7305 8879 m 7350 9059 l 7395 8879 l 7305 8879 l  cp gs 0.00 setgray ef gr  col0 s
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 286 2859 a
 gsave currentpoint currentpoint translate 90.0 neg rotate neg exch
neg exch translate
 286 2859 a 0 0 0 TeXcolorrgb
Fd(m)463 2784 y Fc(2)p Black 286 2859 a
 currentpoint grestore moveto
 286 2859 a 0 0 0
TeXcolorrgb 3548 2634 a Fb(\001)p Fd(m)3885 2559 y Fc(2)3885
2686 y(32)p Black 0 0 0 TeXcolorrgb 3548 3684 a Fb(\001)p
Fd(m)3885 3610 y Fc(2)3885 3736 y(21)p Black 0 0 0 TeXcolorrgb
1598 1284 a Fb(normal)p Black 0 0 0 TeXcolorrgb 3357
w(in)-5 b(v)g(erted)p Black 0 0 0 TeXcolorrgb 6998 1847
a(\001)p Fd(m)7335 1772 y Fc(2)7335 1898 y(21)p Black
0 0 0 TeXcolorrgb 6998 2634 a Fa(\000)p Fb(\001)p Fd(m)7496
2559 y Fc(2)7496 2686 y(32)p Black 0 0 0 TeXcolorrgb
286 4472 a Fb(0)p Black 0 0 0 TeXcolorrgb 4073 1734 a
Fd(\027)4173 1765 y Fc(2)p Black 0 0 0 TeXcolorrgb 4073
1997 a Fd(\027)4173 2028 y Fc(1)p Black 0 0 0 TeXcolorrgb
4073 3497 a Fd(\027)4173 3528 y Fc(3)p Black 0 0 0 TeXcolorrgb
623 3797 a Fd(\027)723 3828 y Fc(1)p Black 0 0 0 TeXcolorrgb
623 3497 a Fd(\027)723 3528 y Fc(2)p Black 0 0 0 TeXcolorrgb
623 1697 a Fd(\027)723 1728 y Fc(3)p Black 0 0 0 TeXcolorrgb
3623 4059 a Fb(?)p Black 0 0 0 TeXcolorrgb 7036 3984
a(?)p Black Black Black Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
